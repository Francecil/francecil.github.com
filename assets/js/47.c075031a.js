(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{603:function(t,a,e){"use strict";e.r(a);var s=e(4),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("[TOC]")]),t._v(" "),a("p",[t._v("#基础")]),t._v(" "),a("p",[t._v('以下属性只适合外部脚本\nasync="async" 异步下载资源，下载完毕后立刻执行，堵塞dom解析，建议异步的脚本不要进行DOM修改 不能确定谁先谁后，一定会在load事件之前完成\ndefer="defer" 等文档解析完再加载\n不存在上面两个属性的，按先后顺序依次对js进行解析\n浏览器在遇到')]),a("body",[t._v("才开始呈现页面内容 所以 一些判断是手机还是pc然后跳转的就可以把js放到head中"),a("p"),t._v(" "),a("p",[t._v("https://segmentfault.com/a/1190000006778717")]),t._v(" "),a("h2",{attrs:{id:"一元"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一元"}},[t._v("#")]),t._v(" 一元+")]),t._v(" "),a("p",[t._v('var a="12";\na=+a;  a=12 有转换为数字的功效\n== != 会先转型 再比较\n=== !== 不转型 先比较类型\nfor(var property in 对象){\nconsole.log(property);输出对象的所有属性\n}')]),t._v(" "),a("h2",{attrs:{id:"labelname-statement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#labelname-statement"}},[t._v("#")]),t._v(" labelName:statement")]),t._v(" "),a("p",[t._v("break和continue后面+上label名即可跳转到该处运行\n最好不要用label。。\n一般使用场景\nthisIsLable:\nfor(){\nfor(){\nif(){\ncontinue thisIsLable;//退出内部循环，继续外部循环\n//or\nbreak thisIsLable;//退出内外部循环\n}\n}\n}")]),t._v(" "),a("h2",{attrs:{id:"with-expression-statement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with-expression-statement"}},[t._v("#")]),t._v(" with(expression) statement")]),t._v(" "),a("p",[t._v("ex:\nvar qs=location.a().c;\nvar url=localtion.b;\nvar vf = localtion.d;")]),t._v(" "),a("p",[t._v("with(location){\nvar qs=a().c;\nvar url=b;\nvar vf = d;\n}\n注：a().c,b,d 以上变量在with中首先会被认为是局部变量，如果找不到定义，在看location有没有同名属性。\nqs,url,vf可以被with(){}外访问到(作用链延长)..\n注2：严格模式不允许使用with")]),t._v(" "),a("h2",{attrs:{id:"switch中比较用的是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch中比较用的是"}},[t._v("#")]),t._v(" switch中比较用的是===")]),t._v(" "),a("h2",{attrs:{id:"function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[t._v("#")]),t._v(" function")]),t._v(" "),a("h3",{attrs:{id:"参数的数量不一定要和指定的一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数的数量不一定要和指定的一致"}},[t._v("#")]),t._v(" 参数的数量不一定要和指定的一致")]),t._v(" "),a("p",[t._v("若function()无指定参数名,通过arguments[i]来获取\n也可以与function(name1,name2){}中的name1,name2一起用\nname1与arguments[0]值一样，可以同时用，并保持单向同步\n注0：修改arguments[0]的值会同步name1的值，但修改name1的值不会同步arguments[0]的值\n也就是说并非引用同一内存地址，内存空间是独立的，只是通过某种手段去同步\n没有被传递值的命名参数默认为undefined\n###非严格模式下，传入一个参数，改变arguments[1]的值，name2不会改变还是undefined\n###严格模式下，也是undefined,并且传入2个参数的情况，对arguments[1]的修改不会影响name2,即 无单向同步")]),t._v(" "),a("h2",{attrs:{id:"没有重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有重载"}},[t._v("#")]),t._v(" 没有重载")]),t._v(" "),a("p",[t._v("定义多个function 即使参数个数不一致，也只会调用最后一个定义的，所以重载只能通过在function中判断参数个数和类型来做了")]),t._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("p",[t._v("可以给对象动态的增加属性\n基本类型a=b 是值复制，对象是引用复制(同一堆内存地址)\n参数传递也是值和引用两种，和Java类似")]),t._v(" "),a("h2",{attrs:{id:"instanceof-判断是什么类型的引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-判断是什么类型的引用"}},[t._v("#")]),t._v(" instanceof 判断是什么类型的引用")]),t._v(" "),a("h2",{attrs:{id:"作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),a("p",[t._v("一般只有全局和局部")]),t._v(" "),a("h3",{attrs:{id:"没有块级作用域-注-es6有"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有块级作用域-注-es6有"}},[t._v("#")]),t._v(" 没有块级作用域(注：es6有)")]),t._v(" "),a("p",[t._v('if(1){\nvar a="h"\n}\nalert(a);//"h"')]),t._v(" "),a("h3",{attrs:{id:"在局部里初始化的变量-没有声明-则-将其作用域变成全局-严格模式下不声明就初始化将报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在局部里初始化的变量-没有声明-则-将其作用域变成全局-严格模式下不声明就初始化将报错"}},[t._v("#")]),t._v(" 在局部里初始化的变量 没有声明，则 将其作用域变成全局 严格模式下不声明就初始化将报错")]),t._v(" "),a("h2",{attrs:{id:"gc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gc"}},[t._v("#")]),t._v(" GC")]),t._v(" "),a("p",[t._v("#引用类型")]),t._v(" "),a("h2",{attrs:{id:"object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),a("p",[t._v("定义对象时最后一个属性不加逗号\n创建对象基本方式\n1.var obj=new Object();\nobj.name1=value1;\n2.var obj = {\nname1:value1,\nname2:value2\n};\n赋值可以混合使用， 初始化也可以这样：var obj={};")]),t._v(" "),a("h2",{attrs:{id:"array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[t._v("#")]),t._v(" Array")]),t._v(" "),a("p",[t._v('var array1=new Array([num]);//num可选 为初始化长度，可以直接初始化值 = new Array("a",1,true);\n方式2 var array2=["b",2,false];\n注意 length不是只读 增大 访问项为undefined 减小length 没掉的访问项为undefined\n检测数组，为了让其在多个可能存在的全局对象中统一，不用 instanceof\n而是用 Array.isArray(xxx)\narray1.join(";")将array1的分隔符改为；并返回\nnewLength=array1.push(value) newLength=array1.pop()\nfirstValue=array1.shift():取出第一项\nnewLength=array1.unshift(value)插入到第一项 之前元素后推\nsort(compare)和reverse(compare) 正逆序排序\nfunction compare(value1,value2){\n...ex: v1<v2 return -1\n}\nvar a2=array1.concat("a","b");//array1复制后再加上 a,b\nvar a3=array1.slice(1,2);//剪裁\n这两个函数都不会影响原数组')]),t._v(" "),a("h3",{attrs:{id:"splice-返回值为被删除的项数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice-返回值为被删除的项数组"}},[t._v("#")]),t._v(" splice 返回值为被删除的项数组")]),t._v(" "),a("p",[t._v('删除：splice(要删除的起始项，要删除的项数)\n插入：splice(要插入的起始项，0，"a","b"...插入的项)\n替换：splice(要替换的起始项，要删除的项数，"a","b"...)')]),t._v(" "),a("p",[t._v("indexOf(要查找的项，查找起始项的索引);\nlastIndexOf(xx,xx);\n###迭代\nevery(function(item,index,array){\n//每一项都运行给定函数，如果都返回true 则返回true;\n...（给定函数）\n});\nfilter()//每一项都运行给定函数，返回该函数会返回true的项数组\nforEach()//每一项都会运行给定函数，无返回值\nmap()//每一项都会运行给定函数 返回 每次函数返回结果 构成的数组\nsome//存在一项运行函数返回true则返回true\nreduce//项从左往右执行 function第一个参数值在第一次运行时为第一项的值\nreduceRight(function(上一个函数运行的结果，当前项的值，index,array){\n...\n});")]),t._v(" "),a("h2",{attrs:{id:"date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date"}},[t._v("#")]),t._v(" Date")]),t._v(" "),a("p",[t._v("var a=new Date();\nDate.now() 获得毫秒数")]),t._v(" "),a("h2",{attrs:{id:"regexp-用来支持正则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-用来支持正则"}},[t._v("#")]),t._v(" RegExp 用来支持正则")]),t._v(" "),a("p",[t._v('var expreesion=/ pattern / flags\nvar ex2=new RegExp{"[cc]at",i};\nflags:\ng:全局匹配，而非发现第一个匹配就停止\ni:不区分大小写模式，只找第一个匹配\ngi:全局匹配且不区分大小写\nm:多行模式，到达一行文本末尾会继续查找下一行中的匹配 也就是说不用特地去管换行符，所有行组成一行的概念')]),t._v(" "),a("p",[t._v('ex2.test("adasdasdaskdjlqd");true or false\nvar matches=ex2.exec(匹配串)//返回第一个匹配项信息的数组  注意：即使设置为g也只会返回第一个但是多次调用会返回下一个\n该数组第一项matches[0]为与整个模式匹配的字符串,其他项为matches[0]匹配模式的字符串?')]),t._v(" "),a("h3",{attrs:{id:"一些长短属性名-使用时查即可"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些长短属性名-使用时查即可"}},[t._v("#")]),t._v(" 一些长短属性名 使用时查即可")]),t._v(" "),a("h3",{attrs:{id:"局限性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局限性"}},[t._v("#")]),t._v(" 局限性")]),t._v(" "),a("h2",{attrs:{id:"function-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-2"}},[t._v("#")]),t._v(" Function")]),t._v(" "),a("p",[t._v("JS引擎会把函数声明提升到顶部，所以函数调用可以在函数声明之前，但是把函数声明改为函数表达式将报错\nex:\nsum(10,10)\nfunction sum(a,b){return a+b;}\n改为\nsum(10,10)\nvar sum=function(a,b){return a+b;};将报错")]),t._v(" "),a("h3",{attrs:{id:"函数内部属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数内部属性"}},[t._v("#")]),t._v(" 函数内部属性")]),t._v(" "),a("p",[t._v("arguments.callee 等价于拥有arguments该对象的函数\n用来解决函数名耦合的问题，后面用其他变量名引用函数也方便使用")]),t._v(" "),a("h3",{attrs:{id:"this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),a("p",[t._v("a.call(作用域比如window,argument1,argument2,...);\nFunction a(){\nthis.xxx ;//通过call调用a函数this即call传过来的作用域\n}\napply()用法类似，只是第二个参数是arguments，或者[a,b]数组\n//num.toPrecision(num) 指数表示法 num:小数位数")]),t._v(" "),a("h2",{attrs:{id:"单体内置对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单体内置对象"}},[t._v("#")]),t._v(" 单体内置对象")]),t._v(" "),a("p",[t._v("encodeURI 只转空格.\nenCodeURLComponent 任何非标准字符（: / $npsb等 ）都会进行编码 :"),a("strong",[t._v("用于发送给服务器的数据编码")])]),t._v(" "),a("h3",{attrs:{id:"eval-注意非严格模式下的注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eval-注意非严格模式下的注意点"}},[t._v("#")]),t._v(" eval 注意非严格模式下的注意点")]),t._v(" "),a("h3",{attrs:{id:"math"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[t._v("#")]),t._v(" Math")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("ceil()上界\nfloor()下界\nround()四舍五入\nrandom() 0~1间的随机数不包括0,1\n")])])]),a("p",[t._v("得到[2,32]间的随机数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("Math.floor(Math.random()*31+2)\n")])])]),a("h1",{attrs:{id:"面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[t._v("#")]),t._v(" 面向对象")]),t._v(" "),a("p",[t._v('var person={\nage:17,\nname:"ss",\nsay:function(){\nxx\n}\n}')]),t._v(" "),a("h3",{attrs:{id:"数据属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据属性"}},[t._v("#")]),t._v(" 数据属性")]),t._v(" "),a("p",[t._v('Object.defineProperty(person,"name",{\nconfigurable:false, //默认true,不能通过delete删除属性从而重新定义属性,不能通过访问器属性修改属性\nvalue:"zjx",    //默认undefine,该属性的值\nwriable:false,  //默认true,数据只读不可写\nEnimerable:true //默认true,可以通过for-in 循环返回属性\n});\n在调用该方法时，如果不指定，configurable，wriable，Enimerable特性的默认值都是false\n配置')]),t._v(" "),a("h3",{attrs:{id:"访问器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问器属性"}},[t._v("#")]),t._v(" 访问器属性")]),t._v(" "),a("p",[t._v("var book={\n"),a("em",[t._v("year:2011, //‘")]),t._v('’一种常用标志，用于表示只能通过对象方法访问的属性\nedition:1\n}\nConfigurable 同上，能否把属性修改为数据属性\nenumerable\nget:function(){}\nset:function(newValue){}\n访问器属性不能直接定义，只能通过下面方法\nObject.defineProperty(book,"year"{ //访问器属性year\nget:function(){\nreturn this._year;\n},\nset:function(newValue){\nthis._year=newValue;\nthis.edition+=newValue-2011;\n}\n});\n通过\nbook.year=2010;//可以正确的设置book._year和edition\n只指定getter意味着不能写，只指定setter的属性不可读，严格模式下读写未指定的会报错')]),t._v(" "),a("h3",{attrs:{id:"define-muiti-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#define-muiti-properties"}},[t._v("#")]),t._v(" define muiti properties")]),t._v(" "),a("p",[t._v("Object.definePropertites(book,{\n_year:{\nvalue:2011\n},\nyear:{\nget..set..\n}\n});")]),t._v(" "),a("h3",{attrs:{id:"读取属性特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取属性特性"}},[t._v("#")]),t._v(" 读取属性特性")]),t._v(" "),a("p",[t._v('var descriptor=Object.getOwnpropertyDescriptor(book,"_year");\nconsole.log(descriptor.value);//2011\ndescriptor.configurable;//false 默认false？')]),t._v(" "),a("h2",{attrs:{id:"创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建对象"}},[t._v("#")]),t._v(" 创建对象")]),t._v(" "),a("h3",{attrs:{id:"工厂模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工厂模式"}},[t._v("#")]),t._v(" 工厂模式")]),t._v(" "),a("p",[t._v("function CreatePerson(a,b,c){\nvar o=new Object();\no.a=a;\n...\nreturn o;\n}\nvar person=Create(..);")]),t._v(" "),a("h3",{attrs:{id:"实例模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例模式"}},[t._v("#")]),t._v(" 实例模式")]),t._v(" "),a("p",[t._v("//function person(a,b,c){\n//\tthis.a=a;\n//  ...\n//\tthis.sayName=function(){}\n//};\nvar person1=new Person(..)")]),t._v(" "),a("h3",{attrs:{id:"原型模式-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型模式-prototype"}},[t._v("#")]),t._v(" 原型模式 prototype")]),t._v(" "),a("p",[t._v('每个函数都有一个prototype属性，指向一个对象\nfunction Person(){\n}\nPerson.prototype.name="abc";\nvar person1=new Person();\n...\n初步了解，后续待研究\n注意原型和构造的区别')]),t._v(" "),a("h2",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),a("p",[t._v("略 待上部分研究完毕")]),t._v(" "),a("h1",{attrs:{id:"函数表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数表达式"}},[t._v("#")]),t._v(" 函数表达式")]),t._v(" "),a("p",[t._v("var func=function(){} //匿名函数")]),t._v(" "),a("p",[t._v("var func;\nif(condition){\nfunc=function(){};\n}else{\nfunc=function(){};\n}\n否则用函数声明时\nif(condition){\nfunction func(){};\n}else{\nfunction func(){};\n}\n会报错")]),t._v(" "),a("h2",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),a("p",[t._v("function factorial(num){\nif(num<=1){\nreturn 1;\n}else{\nreturn num"),a("em",[t._v("factorial(num-1);\n}\n}\nvar abc=factorial;//用另外一个变量指示该函数\nfactorial=null;//原函数引用只剩abc\nconsole.log(abc(5));//error 找不到factorial\n之前说过可以用arguments.calllee\nreturn num")]),t._v("factorial(num-1); => return num"),a("em",[t._v("arguments.calllee(num-1);\n但是严格模式下不能调用arguments.calllee,访问该属性会出错\n通过函数命名表达式来解决\nvar factorial={function f(num){\n...\nreturn num")]),t._v("f(num-1);\n}}\n即使factorial赋值给其他对象，f仍然有效")]),t._v(" "),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),a("h1",{attrs:{id:"bom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),a("h2",{attrs:{id:"window-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window-对象"}},[t._v("#")]),t._v(" window 对象")]),t._v(" "),a("p",[t._v("setTimeout and setInterval")]),t._v(" "),a("p",[t._v("(fun/string,time)")]),t._v(" "),a("p",[t._v("将在指定time后把任务发给任务队列，队列空则开始执行，也就是说，上一任务还未结束则等待")]),t._v(" "),a("p",[t._v("(js单线程，共用同一个任务队列")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("<script>\n\t\tfor(var i = 1; i <= 3; i++) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tconsole.log(i)\n\t\t\t}, 0)\n\t\t}\n<\/script>\n")])])]),a("p",[t._v("setTimeout把任务添加进任务队列，但是需要等先进任务队列的for循环。故最后输出三个4.")]),t._v(" "),a("h2",{attrs:{id:"location-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#location-对象"}},[t._v("#")]),t._v(" location 对象")]),t._v(" "),a("p",[t._v("假设初始是 "),a("code",[t._v("http://www.abc.com:8080/hello")])]),t._v(" "),a("p",[t._v("将url修改为"),a("code",[t._v("http://www.abc.com:8080/hello#section1")])]),t._v(" "),a("p",[t._v('location.hash="@section1";')]),t._v(" "),a("p",[t._v("将url修改为"),a("code",[t._v("http://www.abc.com:8080/hello?q=111")])]),t._v(" "),a("p",[t._v('location.search="?q=111"')]),t._v(" "),a("p",[t._v("其他的hostname,pathname,port的修改方法类似")]),t._v(" "),a("p",[t._v("除hash外 其他调用都会以新url加载")]),t._v(" "),a("p",[t._v("location.reload(bool) 重新加载，是否从本地缓存获取数据")]),t._v(" "),a("h2",{attrs:{id:"navigator-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#navigator-对象"}},[t._v("#")]),t._v(" navigator 对象")]),t._v(" "),a("h3",{attrs:{id:"检测插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检测插件"}},[t._v("#")]),t._v(" 检测插件")]),t._v(" "),a("p",[t._v("IE 不可用")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("\t<script>\n\t\tfor(var i=0;i<navigator.plugins.length;i++){\n\t\tconsole.log(navigator.plugins[i].name);\n\t}\n\t<\/script>\n")])])]),a("h1",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),a("p",[t._v("尽量只用冒泡事件流")]),t._v(" "),a("p",[t._v("事件流程：捕获（document->dom对象->具体元素) -> 冒泡(具体元素->dom对象->document)")]),t._v(" "),a("h2",{attrs:{id:"dom2级事件处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom2级事件处理"}},[t._v("#")]),t._v(" DOM2级事件处理")]),t._v(" "),a("p",[a("code",[t._v('dom元素.addEventListener("事件名如click",处理函数,boolean值：冒泡处理false还是捕获阶段处理true[一般是使用冒泡])')]),t._v(";")]),t._v(" "),a("p",[t._v("如果处理函数是匿名函数，则无法通过"),a("code",[t._v("removeEventListener(,,)[参数一致]")]),t._v("移除")]),t._v(" "),a("p",[a("code",[t._v("stopPropagation")]),t._v(" 停止继续冒泡or捕获")]),t._v(" "),a("p",[t._v("封装EventUtil 来处理IE 和其他浏览器，见pdf 13章")]),t._v(" "),a("p",[a("code",[t._v("preventDefault(event)")]),t._v(" 屏蔽默认方法")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.test1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.test1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("Q：点击div.test1后，数字1和2的出现顺序是什么样的？")]),t._v(" "),a("p",[t._v("A: 1,2 此时该元素处于目标元素，不存在什么冒泡或捕获阶段")]),t._v(" "),a("p",[t._v("注意：点击label时，默认处理会focus对应的控件并执行点击操作（可以用preventDefault取消）")]),t._v(" "),a("p",[t._v("所以对于"),a("code",[t._v('<label>Click me<input type="text"></label>')]),t._v(" 这类的，事件绑定在label时要额外注意")]),t._v(" "),a("h2",{attrs:{id:"事件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件类型"}},[t._v("#")]),t._v(" 事件类型")]),t._v(" "),a("h3",{attrs:{id:"html5-事件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html5-事件类型"}},[t._v("#")]),t._v(" HTML5 事件类型")]),t._v(" "),a("blockquote",[a("p",[t._v("contextmenu 上下文菜单")])]),t._v(" "),a("p",[t._v("win为浏览器时鼠标右键填出的窗口")]),t._v(" "),a("p",[t._v("可捕获该事件并屏蔽默认事件，然后弹出自定义窗口")]),t._v(" "),a("blockquote",[a("p",[t._v("beforeunload 页面被关闭前触发")])]),t._v(" "),a("p",[t._v("一般用于询问用户是否真的要关闭页面")]),t._v(" "),a("h2",{attrs:{id:"内存和性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存和性能"}},[t._v("#")]),t._v(" 内存和性能")]),t._v(" "),a("p",[t._v("1.多次注册监听事件影响性能，可以利用事件委托，在尽量高层添加事件处理程序")]),t._v(" "),a("p",[t._v("2.在不需要的时候移除事件处理程序")]),t._v(" "),a("p",[t._v("在卸载页面前，先通过"),a("code",[t._v("onunload")]),t._v("事件处理移除所有事件处理程序。")]),t._v(" "),a("p",[t._v("所以多用事件委托，移除就更容易")]),t._v(" "),a("h2",{attrs:{id:"模拟事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟事件"}},[t._v("#")]),t._v(" 模拟事件")]),t._v(" "),a("h3",{attrs:{id:"模拟鼠标事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟鼠标事件"}},[t._v("#")]),t._v(" 模拟鼠标事件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('var event = document.createEvent("MouseEvents");\n\nevent.initMouseEvent(..)\n\nbtn.dispatchEvent(event);\n')])])]),a("p",[t._v("变动事件和HTML事件较少用到")]),t._v(" "),a("h1",{attrs:{id:"表单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单"}},[t._v("#")]),t._v(" 表单")]),t._v(" "),a("p",[t._v("submit 存在时，有焦点按回车会提交，想在此之前先做判断再提交可以"),a("code",[t._v("preventDefault")])]),t._v(" "),a("h2",{attrs:{id:"文本选择-range"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本选择-range"}},[t._v("#")]),t._v(" 文本选择 Range.")]),t._v(" "),a("p",[t._v("具体样例见diigo调研")]),t._v(" "),a("h2",{attrs:{id:"过滤输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤输入"}},[t._v("#")]),t._v(" 过滤输入")]),t._v(" "),a("p",[t._v("检测keypress过滤后preventDefault")]),t._v(" "),a("p",[t._v("一些浏览器非字符键也会触发[编码为0 or 8]，故还要判断是否charCode >=9")]),t._v(" "),a("p",[t._v("还要考虑Ctrl+C 等的组合键 ，确保不屏蔽Ctrl键")]),t._v(" "),a("h2",{attrs:{id:"剪切板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剪切板"}},[t._v("#")]),t._v(" 剪切板")]),t._v(" "),a("p",[t._v("操作剪切板的几个方法能在复制、剪切、粘贴 前/时 调用")]),t._v(" "),a("p",[t._v("访问剪切板数据 通过clipboardDta.getData()")]),t._v(" "),a("h2",{attrs:{id:"h5约束验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h5约束验证"}},[t._v("#")]),t._v(" H5约束验证")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("formnovalidate = true :禁用验证\n")])])]),a("p",[t._v("输入模式 pattern 不能阻止用户输入无效文本")]),t._v(" "),a("p",[t._v("配合 checkValidity检测有效性方法来处理 or validity告诉你为什么有效或者无效")]),t._v(" "),a("h2",{attrs:{id:"选择框脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择框脚本"}},[t._v("#")]),t._v(" 选择框脚本")]),t._v(" "),a("h2",{attrs:{id:"富文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#富文本"}},[t._v("#")]),t._v(" 富文本")]),t._v(" "),a("p",[t._v("略 用的时候再看。")]),t._v(" "),a("h1",{attrs:{id:"canvas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canvas"}},[t._v("#")]),t._v(" Canvas")]),t._v(" "),a("h2",{attrs:{id:"上下文context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上下文context"}},[t._v("#")]),t._v(" 上下文Context")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('var drawing=document.getElementById("test");\n\t\tif(drawing.getContext){\n\t\t\tvar context=drawing.getContext("2d");\n\t\t\tcontext.fillStyle="#ff0000";\n\t\t\tcontext.fillRect(10,10,20,20); 点(10,10)开始的边长为20 的红色矩形\n\t\t\t\n\t\t}\n')])])]),a("p",[t._v("strokeStyle =color 描边颜色 矩形可以直接指定，路径需要在绘制完成后再调用stroke方法")]),t._v(" "),a("p",[t._v("fillStyle 填充 矩形可以直接指定，路径需要在绘制完成后再调用fill方法")]),t._v(" "),a("p",[t._v("closePath 将路径的起点终点用直线连接起来")]),t._v(" "),a("p",[t._v("蓝边红底半圆效果")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('\t\t\tcontext.strokeStyle="blue";\n\t\t\tcontext.fillStyle="red";\n\t\t\tcontext.beginPath();\n\t\t\tcontext.arc(100,100,99,0,Math.PI,false);\n\t\t\tcontext.closePath();\n\t\t\tcontext.stroke();\n\t\t\tcontext.fill();\n')])])]),a("p",[a("strong",[t._v("注")]),t._v("：要画另外一条路径，先moveTo到新路径起点，否则将与前面的连起来，路径起点还是原路径的起点")]),t._v(" "),a("p",[t._v("要绘制路径要先调用 beginPath()方法：作为一种标识，closePath/stroke/fill等方法调用时只处理两者之间的代码")]),t._v(" "),a("p",[t._v("如这样只会绘制内圆")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("\t\t\tcontext.beginPath();\n\t\t\tcontext.arc(100,100,99,0,2*Math.PI,false);\n\t\t\t\n\t\t\tcontext.beginPath();\n\t\t\tcontext.arc(100,100,60,0,2*Math.PI,false);\n\t\t\tcontext.stroke();\n")])])]),a("p",[t._v("简单的说 两者之间的代码只是作为状态的设置，最后才会绘制.")]),t._v(" "),a("p",[t._v("###文本绘制")]),t._v(" "),a("p",[t._v("比较简单 参看API")]),t._v(" "),a("h3",{attrs:{id:"变换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变换"}},[t._v("#")]),t._v(" 变换")]),t._v(" "),a("p",[t._v("参见API，可以做个时钟动画来学习下。")]),t._v(" "),a("p",[t._v("save restore 栈结构用于保存和恢复fillStyle和strokeStyle属性")]),t._v(" "),a("h3",{attrs:{id:"绘制图像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制图像"}},[t._v("#")]),t._v(" 绘制图像")]),t._v(" "),a("p",[t._v("context.drawImage("),a("img"),t._v("元素/"),a("canvas",[t._v("元素,起点x,起点y,绘制图像宽，绘制图像高)")])]),t._v(" "),a("p",[t._v("canvas.toDataURL 输出canvas结果")]),t._v(" "),a("h3",{attrs:{id:"阴影"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阴影"}},[t._v("#")]),t._v(" 阴影")]),t._v(" "),a("h3",{attrs:{id:"渐变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渐变"}},[t._v("#")]),t._v(" 渐变")]),t._v(" "),a("h3",{attrs:{id:"模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式"}},[t._v("#")]),t._v(" 模式")]),t._v(" "),a("p",[t._v("同 background-repeat")]),t._v(" "),a("h3",{attrs:{id:"使用图像数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用图像数据"}},[t._v("#")]),t._v(" 使用图像数据")]),t._v(" "),a("p",[t._v("imageData=context.getImageData(起点坐标 宽高) 去获取原始图像数据")]),t._v(" "),a("p",[t._v("data=imageData.data")]),t._v(" "),a("p",[t._v("image.data=修改后的data")]),t._v(" "),a("p",[t._v("利用 context.putImageData(imageData,0,0)回写图像数据并显示")]),t._v(" "),a("p",[t._v("注意  要做上面处理的时候 context.drawImage时传入的image不能是其他域的")]),t._v(" "),a("h3",{attrs:{id:"合成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合成"}},[t._v("#")]),t._v(" 合成")]),t._v(" "),a("p",[t._v("两个图像重叠时以什么效果去做，与android用法相似")]),t._v(" "),a("h2",{attrs:{id:"webgl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webgl"}},[t._v("#")]),t._v(" WebGL")]),t._v(" "),a("p",[t._v("Canvas的3d上下文 与es2用法类似，需要用的时候再去看看。做个demo啥的")]),t._v(" "),a("h1",{attrs:{id:"h5脚本编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h5脚本编程"}},[t._v("#")]),t._v(" H5脚本编程")]),t._v(" "),a("h2",{attrs:{id:"跨文档消息传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨文档消息传递"}},[t._v("#")]),t._v(" 跨文档消息传递")]),t._v(" "),a("p",[t._v("向当前页面的"),a("code",[t._v("<iframe>")]),t._v("传递数据 "),a("code",[t._v("postMessage(消息,域)")])]),t._v(" "),a("h2",{attrs:{id:"拖放-重点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拖放-重点"}},[t._v("#")]),t._v(" 拖放(重点)")]),t._v(" "),a("p",[t._v("做一个类似qq邮箱的可拖放图片并显示的效果来掌握")]),t._v(" "),a("h2",{attrs:{id:"媒体元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#媒体元素"}},[t._v("#")]),t._v(" 媒体元素")]),t._v(" "),a("p",[t._v("video audio")]),t._v(" "),a("p",[t._v("api齐全 用时看下")]),t._v(" "),a("p",[t._v("想知道是否支持编解码器")]),t._v(" "),a("p",[t._v("利用")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('if(audio.canPlayType("audio/mpeg")){\n\t\n}\n')])])]),a("p",[t._v("返回值 maybe / probably 表示true")]),t._v(" "),a("p",[t._v("空字符串表示false")]),t._v(" "),a("h2",{attrs:{id:"历史状态管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#历史状态管理"}},[t._v("#")]),t._v(" 历史状态管理")]),t._v(" "),a("blockquote",[a("p",[t._v('pushState("初始化页面所需信息","新标题，目前无浏览器实现","相对URL")')])]),t._v(" "),a("p",[t._v("创建新的历史状态 按后退会促发popState，其事件有一个state属性(当初pushState传入的第一个参数)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("var state = event.state;\nif(state){//第一个页面加载时state为null\n\tprocessState(state);//把页面重置为状态对象中的数据表示的状态,自己实现\n} \n")])])]),a("blockquote",[a("p",[t._v('replaceState("初始化页面所需信息","新标题")')])]),t._v(" "),a("p",[t._v("不会创建新状态 只会更新当前状态")]),t._v(" "),a("h1",{attrs:{id:"error-and-debug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error-and-debug"}},[t._v("#")]),t._v(" error and debug")]),t._v(" "),a("h2",{attrs:{id:"错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("try{\n\treturn 1;\n}catch(error){\n\talert(error.message)\n}finally{\n\treturn 0\n}\n")])])]),a("p",[t._v("最终"),a("code",[t._v("return 0;")])]),t._v(" "),a("p",[a("code",[t._v("throw + 任意类型")]),t._v(" 抛出自定义错误")]),t._v(" "),a("p",[t._v("代码会立即停止运行，除非被catch到")]),t._v(" "),a("p",[t._v("若错误未被处理(catch)，会触发window对象的error事件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("window.onerror = function(message,url,line){\n\talert(message);\n\treturn false;//false 阻止浏览器报告错误的默认行为\n}\n")])])]),a("p",[t._v("一般不使用它而是在代码中去catch")]),t._v(" "),a("p",[a("strong",[t._v("常见错误：")])]),t._v(" "),a("p",[t._v("1.流控制语句使用非布尔值去判断")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('要求：str值非空就可以继续处理\n\nif(str){\n\tconsole.log("继续处理");\n}\n\n然而当str=0 的时候也不会处理\nif(str!=null) {\n\tconsole.log("str非null");\n}\n')])])]),a("p",[t._v("2.判断是否为数组应该  用 "),a("code",[t._v("values instanceof Array")])]),t._v(" "),a("p",[t._v("而不是用特性执行检测，如判断 "),a("code",[t._v('typeof values.sort == "function"')])]),t._v(" "),a("p",[t._v("3.通信错误")]),t._v(" "),a("p",[t._v("未进行URI编码  发送给服务器之前 数据需要先进行encodeURLComponent")]),t._v(" "),a("p",[t._v("将js错误回写服务器")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('//sev:严重程度 msg:错误消息\nfunction logError(sev,msg){\n\tvar img=new Image();\n\timg.src="log.php?sev="+encodeURIComponent(sev)+"&msg="+encodeURLCompoent(msg);\n}\n\n\n所有浏览器支持image对象\n可避免跨域\n独立，不同于第三方ajax包装库可能出问题\n')])])]),a("h2",{attrs:{id:"调试技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调试技术"}},[t._v("#")]),t._v(" 调试技术")]),t._v(" "),a("p",[t._v("没有一种跨浏览器的调试机制，需要封装成如下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('function log(msg){\n\tif(typeof console == "object"){\n\t\tconsole.log(message); //主流版本\n\t}else if(typeof opera == "object"){\n\t\topera.postError(message);//opera 10.5前版本可用此方法输出任何信息\n\t}else if(typeof java == "object" && typeof java.lang == "object"){\n\t\tjava.lang.System.out.println(message);\n\t}\n}\n')])])]),a("h3",{attrs:{id:"抛出错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抛出错误"}},[t._v("#")]),t._v(" 抛出错误")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("throw new Error(msg)\n\nassert(true条件，条件为false要抛出的错误msg)\n")])])]),a("h1",{attrs:{id:"js-xml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-xml"}},[t._v("#")]),t._v(" JS & XML")]),t._v(" "),a("p",[t._v("XPath XSLT E4X")]),t._v(" "),a("p",[t._v("略  使用时看文档")]),t._v(" "),a("h1",{attrs:{id:"json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[t._v("#")]),t._v(" JSON")]),t._v(" "),a("h2",{attrs:{id:"stringify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stringify"}},[t._v("#")]),t._v(" stringify")]),t._v(" "),a("p",[t._v("js对象转json字符串 默认不包括空格和缩进，函数 原型成员 undefined都被忽略")]),t._v(" "),a("p",[t._v("有两个额外参数：")]),t._v(" "),a("blockquote",[a("p",[t._v("1.过滤器(数组or函数)，结果只包含数组中的属性，或者根据函数的key value返回自定义的值\n2.保留缩进，传入一个数值or字符串：数值表示每个级别 缩进的空格数 最大数值为10；字符串将代替空格，最大字符串长度为10")])]),t._v(" "),a("p",[t._v("有时stringify不能满足需求的时候，可以通过对象上调用toJSON方法\n"),a("code",[t._v("toJSON()")]),t._v(":若存在该方法且能得到有效的值，则")]),t._v(" "),a("p",[a("code",[t._v("parse")]),t._v(": json字符串转js对象")]),t._v(" "),a("p",[t._v("有一个额外参数：")]),t._v(" "),a("p",[t._v("是一个还原函数(key,value)，若还原函数返回undefined,则返回的js对象中不包括该键值")]),t._v(" "),a("p",[t._v("可以基于键返回新的值，如属性中value含有的非常规值而是对象的时候就可通过此法返回对象")]),t._v(" "),a("h1",{attrs:{id:"ajax-跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax-跨域"}},[t._v("#")]),t._v(" AJAX & 跨域")]),t._v(" "),a("h2",{attrs:{id:"用法-xhr-1级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法-xhr-1级"}},[t._v("#")]),t._v(" 用法 XHR-1级")]),t._v(" "),a("p",[t._v("IE7之前XHR需要用ActiveX")]),t._v(" "),a("p",[t._v("XHR 只能向同域中使用同端口和同协议的的URL发送请求")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('var xhr = new XMLHTTPRequest(); //IE7以下需要用ActiveXObject 见pdf\nxhr.open("get"/"post",url,true/false);//待发送请求 true异步\n\nxhr.setRequestHeader("ZJXHeader","TEST");//设置自定义请求头部信息，代码需放两个方法之间\n\nxhr.send("search=abc&key=2" or null);//发null不是必须只是为了兼容某些浏览器需要参数\n\nxhr.getResponseHeader("ZJXHeader");//可以取得相对应的响应信息\n')])])]),a("p",[a("strong",[t._v("同步")]),t._v("：")]),t._v(" "),a("p",[t._v("responseText：响应文本，无论是什么类型")]),t._v(" "),a("p",[t._v("responseXML: 若响应内容类型是"),a("code",[t._v("“text/xml”")]),t._v("or"),a("code",[t._v("application/xml")]),t._v(" 返回XML DOM文档，否则为null")]),t._v(" "),a("p",[t._v("status: 响应的HTTP状态")]),t._v(" "),a("p",[t._v("statusText: HTTP状态说明，一般不用")]),t._v(" "),a("p",[a("strong",[t._v("异步")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("xhr.onreadystatechange = function(){\n\n\tif(xhr.readyState==4){\n\t\t//接受到全部数据\n\t\t//根据xhr.status来判断此次请求是否成功\n\t}else{\n\t\t//3:接受到部分数据\n\t\t//2:已经调用send方法，但未接受到响应\n\t\t//1:已经调用open方法，尚未调用send方法\n\t\t//0:尚未调用open方法\n\t}\n}\n\n\nxhr.abort()取消异步请求\n")])])]),a("h2",{attrs:{id:"xhr2级规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xhr2级规范"}},[t._v("#")]),t._v(" XHR2级规范")]),t._v(" "),a("p",[a("strong",[t._v("1.FormData")])]),t._v(" "),a("p",[t._v("表单的序列号，存k-v对，所有浏览器都有实现")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("var data = new FormData(form);\n\nxhr.send(data)\n")])])]),a("p",[a("strong",[t._v("2.超时设定")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("xhr.timeout = 1000;//仅适用于ie8+\n")])])]),a("p",[a("strong",[t._v("3.overrideMimeType()方法")])]),t._v(" "),a("p",[t._v("重写MIME类型")]),t._v(" "),a("p",[t._v("如服务器返回的是"),a("code",[t._v("text/plain")]),t._v("但实际数据是XML")]),t._v(" "),a("p",[t._v("responseXML 值为null 此时可以调用该方法")]),t._v(" "),a("p",[t._v("该方法需要在send之前调用")]),t._v(" "),a("p",[t._v("主流浏览器都支持")]),t._v(" "),a("h2",{attrs:{id:"进度事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进度事件"}},[t._v("#")]),t._v(" 进度事件")]),t._v(" "),a("p",[t._v("以"),a("code",[t._v("loadstart")]),t._v("开始，中间若干"),a("code",[t._v("progress")]),t._v("，然后触发"),a("code",[t._v("abort/error/load")]),t._v("中的一个，最后以"),a("code",[t._v("loadend")]),t._v("结尾。")]),t._v(" "),a("p",[a("code",[t._v("abort")]),t._v(":调用abort()方法而终止")]),t._v(" "),a("p",[a("code",[t._v("load")]),t._v(":接收到完整响应")]),t._v(" "),a("p",[a("code",[t._v("error")]),t._v(":请求发送错误")]),t._v(" "),a("p",[a("code",[t._v("progress")]),t._v("：function(event){} event中包含进度信息是否可用(lengthComputable)，已接收字节数(position)和Content-Length响应头确定的预期字节数(totalSize)")]),t._v(" "),a("h2",{attrs:{id:"跨源资源共享cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨源资源共享cors"}},[t._v("#")]),t._v(" 跨源资源共享CORS")]),t._v(" "),a("p",[t._v("//XHR的一个限制就是跨域安全策略\n//\n//在请求中添加一个额外的Origin头部\n//\n//eq:\n//\n//\tOrigin： http://www.gahing.tech\n//\n//服务器会在"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("回发相同的源信息\n// eq:\n//\n//\tAccess-Control-Allow-Origin: http://www.gahing.tech\n//")]),t._v(" "),a("h2",{attrs:{id:"其他跨域技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他跨域技术"}},[t._v("#")]),t._v(" 其他跨域技术")]),t._v(" "),a("h3",{attrs:{id:"_1-图像ping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-图像ping"}},[t._v("#")]),t._v(" 1.图像Ping")]),t._v(" "),a("p",[t._v("之前有提到过，"),a("code",[t._v('img.src="http://xxx.com?search=abc";')]),t._v(" 即可发起调用。")]),t._v(" "),a("p",[t._v("常用于跟踪用户点击页面行为 及广告曝光次数")]),t._v(" "),a("p",[t._v("缺点：只能发Get请求，不能获得响应文本")]),t._v(" "),a("h3",{attrs:{id:"_2-jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-jsonp"}},[t._v("#")]),t._v(" 2.JSONP")]),t._v(" "),a("p",[t._v("...............")]),t._v(" "),a("h1",{attrs:{id:"离线存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#离线存储"}},[t._v("#")]),t._v(" 离线存储")]),t._v(" "),a("p",[t._v("见Diigo技术调研一文")]),t._v(" "),a("h1",{attrs:{id:"最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),a("h2",{attrs:{id:"可维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可维护"}},[t._v("#")]),t._v(" 可维护")]),t._v(" "),a("p",[t._v("CSS 与 JS 的解耦合：")]),t._v(" "),a("p",[t._v("修改元素的css类(需要创建更多类) 而不是修改css类中的属性，看情况采取该法。")]),t._v(" "),a("p",[t._v("应用逻辑和事件处理的解耦：")]),t._v(" "),a("p",[t._v("勿将event对象传给其他方法，只传event对象的部分值")]),t._v(" "),a("p",[t._v("避免全局量，多个全局量可以用一个单一的全局量对象去封装")]),t._v(" "),a("p",[t._v("然后其他的命名空间在该对象上创建.一般项目每个人维护自己的命名空间")]),t._v(" "),a("p",[t._v("js中的if判断，一般是让其与应该值比，而不是与不符值比，")]),t._v(" "),a("p",[t._v("如判断 一个对象是不是数组，不能判断"),a("code",[t._v("if(value!=null)")]),t._v("而是判断"),a("code",[t._v("if(value instanceof Array)")])]),t._v(" "),a("h2",{attrs:{id:"性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[t._v("#")]),t._v(" 性能")]),t._v(" "),a("p",[t._v("###1.作用域")]),t._v(" "),a("p",[t._v("1.全局变量多次引用应该用一个局部变量代替")]),t._v(" "),a("p",[t._v("2.避免with")]),t._v(" "),a("p",[t._v("###2.避免双重解释")]),t._v(" "),a("p",[t._v("如"),a("code",[t._v("setTimeout(\"alert('Hello world')\",500)")])]),t._v(" "),a("p",[t._v("###3.最小化语句数")]),t._v(" "),a("p",[t._v("1.多变量声明")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('var a=5;\nvar b="blue";\nvar c=[1,2,3];\n')])])]),a("p",[t._v("应该改为")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('var a=5,b="blue",c=[1,2,3];\n')])])]),a("p",[t._v("2.使用数组和对象字面量")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('var person=new Object();\nperson.name="gahing";\nperson.age=14;\n')])])]),a("p",[t._v("改为")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('var person={\n\tname:"gahing",\n\tage:14;\n};\n')])])]),a("p",[t._v("语句从3条变为1条")]),t._v(" "),a("h3",{attrs:{id:"_4-优化dom交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-优化dom交互"}},[t._v("#")]),t._v(" 4.优化DOM交互")]),t._v(" "),a("p",[t._v("1.使用fragment")]),t._v(" "),a("p",[a("code",[t._v("var fragment=document.createDocumentFragment()")])]),t._v(" "),a("p",[t._v("先将item添加到fragment")]),t._v(" "),a("p",[t._v("最后fragment被添加"),a("code",[t._v("list.appendChild(fragment)")])]),t._v(" "),a("p",[t._v("代替每次直接"),a("code",[t._v("list.appendChild(item);")])]),t._v(" "),a("p",[t._v("2.大DOM修改采取innerHTML")]),t._v(" "),a("p",[t._v("3.使用事件代理，前面事件一章已提到")]),t._v(" "),a("h2",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),a("p",[t._v("压缩 调试 构建工具的选择")]),t._v(" "),a("h1",{attrs:{id:"新兴的api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新兴的api"}},[t._v("#")]),t._v(" 新兴的API")])])])}),[],!1,null,null,null);a.default=n.exports}}]);