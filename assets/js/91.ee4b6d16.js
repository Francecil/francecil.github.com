(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{821:function(t,e,r){"use strict";r.r(e);var s=r(27),a=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("中断的执行单元? 不是单元内暂停，而是已经执行完了，准备执行下一个执行单元时中断。")]),t._v(" "),e("p",[t._v("每个虚拟dom是一个fiber单元，构成链表")]),t._v(" "),e("p",[t._v("fiber 遍历，为啥采用迭代代替递归？\n需从头恢复，不能随意中断")]),t._v(" "),e("p",[t._v("componentWillMount 这些方法为什么不能用？\n如果执行了副作用，会调用多次，")]),t._v(" "),e("p",[t._v("setState 执行 fiber 链后，")]),t._v(" "),e("p",[t._v("高优任务，放弃原链。")]),t._v(" "),e("h2",{attrs:{id:"两个阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两个阶段"}},[t._v("#")]),t._v(" 两个阶段")]),t._v(" "),e("h2",{attrs:{id:"简单说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单说明"}},[t._v("#")]),t._v(" 简单说明")]),t._v(" "),e("p",[t._v("协调(diff,非连续)，提交")])])}),[],!1,null,null,null);e.default=a.exports}}]);